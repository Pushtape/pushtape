<?php
/**
 * @file pushtape.install
 * Install, update and uninstall functions.
 */

/**
 * Implements hook_install().
 */
function pushtape_install() {
  // Set the default theme.
  _pushtape_set_up_theme();
  
    // Colorbox custom links
  variable_set('colorbox_inline', 1);
  variable_set('colorbox_load', 1);
  variable_set('colorbox_mobile_detect', 0);
}

/**
 * Set the default theme.
 */
pushtape  $theme = 'pushtape_bootstrap';
  theme_enable(array($theme));
  variable_set('theme_default', $theme);
  variable_set('admin_theme', 'shiny');
  variable_set('node_admin_theme', '1');
  theme_disable(array('bartik'));
  
  
// Create user/2
$new_user = array(
'name' => 'artist',
'pass' => $root->pass,
'mail' => $root->mail,
'init' => $root->mail,
'status' => 1,
);

// $account returns user object
$account = user_save(null, $new_user);

// Assign the artist to the "editor" role.
$role = user_role_load_by_name('editor');
db_insert('users_roles')
->fields(array('uid' => $account->uid, 'rid' => $role->rid))
->execute();

// New accounts made by administrators only.
  variable_set('user_register', USER_REGISTER_ADMINISTRATORS_ONLY);

// Enable default permissions for system roles.
  user_role_grant_permissions(DRUPAL_ANONYMOUS_RID, array('access content'));
  user_role_grant_permissions(DRUPAL_AUTHENTICATED_RID, array('access content'));

// Set front page
  variable_set('site_frontpage', 'front');  
  
// Set up private file directory
//  variable_set('file_private_path','sites/default/files/private');   
  
}

/**
 * Implements hook_install_tasks().
 */
function pushtape_install_tasks(&$install_state) {

  // Remove any status messages that might have been set. They are unneeded.
  drupal_get_messages('status', TRUE);
  
  $tasks = array(
    'pushtape_final_site_setup' => array(),
  );
  return $tasks;
}

/**
 * Return system status before completing installation.
 */
function pushtape_final_site_setup() {

  drupal_set_title(st('@drupal installation complete', array('@drupal' => drupal_install_profile_distribution_name())), PASS_THROUGH);
  $messages = drupal_set_message();
  $output = '<p>' . st('Congratulations, you installed @drupal!', array('@drupal' => drupal_install_profile_distribution_name())) . '</p>';
  $output .= '<p>' . (isset($messages['error']) ? st('Review the messages above before visiting <a href="@url">your new site</a>.', array('@url' => url(''))) : st('<a href="@url">Visit your new site</a>.', array('@url' => url('')))) . '</p>';
 
  
  /**
   * Flush all caches to ensure that any full bootstraps during the installer
   * do not leave stale cached data, and that any content types or other items
   * registered by the installation profile are registered correctly.
   */
  drupal_flush_all_caches();

  // Remember the profile which was used.
  variable_set('install_profile', drupal_get_profile());

  // Installation profiles are always loaded last
  db_update('system')->fields(array('weight' => 1000))->condition('type', 'module')->condition('name', drupal_get_profile())->execute();

  // Cache a fully-built schema.
  drupal_get_schema(NULL, TRUE);

  // Run cron to populate update status tables (if available) so that users
  // will be warned if they've installed an out of date Drupal version.
  // Will also trigger indexing of profile-supplied content or feeds.
  drupal_cron_run();


  return $output;
}





